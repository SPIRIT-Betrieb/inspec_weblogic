username = '<%= @username %>'
password = '<%= @password %>'
url      = '<%= @url %>'

if connected != 'true':
    connect(username, password, url)

def quote(text):
    if text or text == '' or text == 0:
        return "\"" + str(text).replace("\"", "\"\"") + "\""
    else:
        return ""

def elements_from_path(full_key):
    elements = full_key.split('/')
    key      = elements.pop()
    path     = '/'.join(elements)
    return path, key

def is_encrypted(full_key):
    path, key = elements_from_path(full_key)
    old_path = pwd()
    cd(path)
    try:
        encrypted = getMBI().getAttribute(key).descriptor.getFieldValue('com.bea.encrypted')
    except:
        print 'No valid com.bea.encrypte attribute info for key ' + key
        encrypted = 0
    return encrypted

path = '<%= path %>'

try:
    print 'Fetching all values from path ' + path
    puppet = open("<%= output_file %>", "w")
    print >>puppet, 'key;value'
    cd(path)
    list = ls(path, returnMap='true', returnType='a')
    for element in list:
        full_path = path + '/' + element
        if not is_encrypted(full_path):
            value = get(full_path)
            print >>puppet, ";".join(map(quote, [full_path, value]))

    puppet.close()
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    print "~~~~COMMAND FAILED~~~~"
    raise
